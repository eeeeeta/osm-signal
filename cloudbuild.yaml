steps:
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull gcr.io/trainsplorer/tspl-builder:latest || exit 0

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    pkgs=("tspl-builder" "tspl-compiled" "osms-nrod" "osms-db-setup" "osms-web"); for thing in ${pkgs[@]}; do docker build -f "docker/$thing" -t "$thing" --cache-from gcr.io/trainsplorer/tspl-builder:latest .; done
  timeout: 3600s

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    pkgs=("tspl-builder" "osms-nrod" "osms-db-setup" "osms-web"); for thing in ${pkgs[@]}; do docker tag "$thing" "gcr.io/trainsplorer/$thing"; docker push "gcr.io/trainsplorer/$thing"; done

steps:
- name: gcr.io/cloud-builders/gcloud
  args: ['container', 'clusters', 'get-credentials', 'tspl-cluster-ii']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=europe-west1-d'
  - 'CLOUDSDK_CONTAINER_CLUSTER=tspl-cluster-ii'

- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    pkgs=("osms-nrod"); for thing in ${pkgs[@]}; do kubectl set image deployment "$thing-deployment" "$thing=gcr.io/trainsplorer/$thing"; done

options:
  machineType: 'N1_HIGHCPU_8'
images: ['gcr.io/trainsplorer/tspl-builder:latest','gcr.io/trainsplorer/osms-nrod:latest', 'gcr.io/trainsplorer/osms-db-setup:latest', 'gcr.io/trainsplorer/osms-web:latest']
timeout: 4400s

