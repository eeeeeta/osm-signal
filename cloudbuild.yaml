steps:
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull gcr.io/trainsplorer/tspl-builder:latest || exit 0

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    pkgs=("tspl-builder" "tspl-compiled" "osms-nrod" "osms-db-setup" "osms-web" "tspl-fahrplan"); for thing in ${pkgs[@]}; do docker build -f "docker/$thing" -t "$thing" --cache-from gcr.io/trainsplorer/tspl-builder:latest .; done
  timeout: 4000s

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    pkgs=("tspl-builder" "osms-nrod" "osms-db-setup" "osms-web" "tspl-fahrplan"); for thing in ${pkgs[@]}; do docker tag "$thing" "gcr.io/trainsplorer/$thing:latest"; docker tag "$thing" "gcr.io/trainsplorer/$thing:$COMMIT_SHA"; docker push "gcr.io/trainsplorer/$thing"; done

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'get-credentials', 'tspl-cluster-ii']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=europe-west1-d'
  - 'CLOUDSDK_CONTAINER_CLUSTER=tspl-cluster-ii'

    #- name: 'gcr.io/cloud-builders/kubectl'
    #  entrypoint: 'bash'
    #  args:
    #  - '-c'
    #  - |
    #    pkgs=("osms-nrod" "osms-web"); for thing in ${pkgs[@]}; do kubectl set image deployment "$thing-deployment" "$thing=gcr.io/trainsplorer/$thing:$COMMIT_SHA"; done

images:
- 'gcr.io/trainsplorer/tspl-builder:latest'
- 'gcr.io/trainsplorer/osms-nrod:$COMMIT_SHA'
- 'gcr.io/trainsplorer/osms-db-setup:$COMMIT_SHA'
- 'gcr.io/trainsplorer/osms-web:$COMMIT_SHA'
- 'gcr.io/trainsplorer/tspl-fahrplan:$COMMIT_SHA'
timeout: 5000s

